name: Combined CI/CD Pipeline

on:
  push:
    branches:
      - master
      - develop
  pull_request:
    branches:
      - master
      - develop
  workflow_dispatch:

env:
  COMPOSE_FILE: docker-compose.production.yml
  DOCKER_IMAGE_NAME: clh-website-app

jobs:
  ci:
    name: Continuous Integration
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Node.js
      uses: actions/setup-node@v4
      with:
        node-version: 18.x
        cache: 'npm'

    - name: Install dependencies
      run: npm ci

    - name: Lint code
      run: npm run lint

    - name: Build project
      run: npm run build

  cd:
    name: Continuous Deployment
    needs: ci
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/master' || github.event_name == 'workflow_dispatch'
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Deploy to VM
      uses: appleboy/ssh-action@v1.0.0
      with:
        host: ${{ secrets.DBMART_HOST }}
        username: ${{ secrets.DBMART_USERNAME }}
        key: ${{ secrets.DBMART_SSH_KEY }}
        port: ${{ secrets.DBMART_PORT }}
        script: |
          echo "Pulling latest changes..."
          cd /CLH_Website
          git pull origin master

          echo "Stopping and removing old containers..."
          docker compose -f ${{ env.COMPOSE_FILE }} down --remove-orphans
          
          echo "Pulling latest image..."
          docker compose -f ${{ env.COMPOSE_FILE }} pull
          
          echo "Starting new containers..."
          docker compose -f ${{ env.COMPOSE_FILE }} up -d --build
          
          echo "Cleaning up old images..."
          docker image prune -af --filter "until=24h"
          
          echo "Deployment complete!"